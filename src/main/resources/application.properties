# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
# spring.datasource.url = jdbc:mysql://${us-cdbr-east-02.cleardb.com}:3306/${heroku_1bffa7221a9f7b3}
#spring.datasource.url = jdbc:mysql://localhost:3306/transportation_company

spring.datasource.url = jdbc:mysql://b04a47a4d90b90:2a5d2860@us-cdbr-east-02.cleardb.com/heroku_1bffa7221a9f7b3?reconnect=true

# Username and password
spring.datasource.username = b04a47a4d90b90
spring.datasource.password = 2a5d2860

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=8081